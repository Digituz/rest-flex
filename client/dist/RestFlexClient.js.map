{"version":3,"sources":["../src/RestFlexClient.js"],"names":["axios","require","Auth0","timeout","RestFlexClient","baseURL","audience","domain","auth0Config","console","log","configure","subscribe","authenticated","entityToken","getExtraToken","silentAuth","then","updateClient","axiosConfig","headers","client","create","object","post","id","Promise","resolve","reject","get","response","data","Array","isArray","map","jsonToObject","catch","put","delete","json","properties","Object","getOwnPropertyNames","forEach","property","value","length","Date","isNaN","module","exports"],"mappings":";;;;;;AAAA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,QAAQD,QAAQ,oBAAR,CAAd;;AAEA,IAAME,UAAU,IAAhB;;IAEMC,c;AACJ,0BAAYC,OAAZ,EAAqBC,QAArB,EAA+BC,MAA/B,EAAuCC,WAAvC,EAAoD;AAAA;;AAAA;;AAClDC,YAAQC,GAAR,CAAYF,WAAZ;AACAN,UAAMS,SAAN,CAAgBH,WAAhB;AACAN,UAAMU,SAAN,CAAgB,UAACC,aAAD,EAAmB;AACjC,UAAIA,aAAJ,EAAmB;AACjB,YAAMC,cAAcZ,MAAMa,aAAN,CAAoBV,OAApB,CAApB;AACA,YAAI,CAACS,WAAL,EAAkB;AAChBZ,gBAAMc,UAAN,CAAiBX,OAAjB,EAA0BC,QAA1B,WAA2CC,MAA3C,aAAyDA,MAAzD,gBAA0EA,MAA1E,cAAyFA,MAAzF,EACGU,IADH,CACQ,YAAM;AACV,kBAAKC,YAAL,CAAkBL,aAAlB,EAAiCR,OAAjC;AACD,WAHH;AAID;AACF;;AAED,YAAKa,YAAL,CAAkBL,aAAlB,EAAiCR,OAAjC;AACD,KAZD;AAaD;;;;iCAEYQ,a,EAAeR,O,EAAS;AACnC,UAAMc,cAAc;AAClBd,wBADkB;AAElBF;AAFkB,OAApB;;AAKA,UAAIU,aAAJ,EAAmB;AACjBM,oBAAYC,OAAZ,GAAsB;AACpB,uCAA2BlB,MAAMa,aAAN,CAAoBV,OAApB;AADP,SAAtB;AAGD;;AAED,WAAKgB,MAAL,GAAcrB,MAAMsB,MAAN,CAAaH,WAAb,CAAd;AACD;;;2BAEMI,M,EAAQ;AACb,aAAO,KAAKF,MAAL,CAAYG,IAAZ,CAAiB,GAAjB,EAAsBD,MAAtB,CAAP;AACD;;;wBAEGE,E,EAAI;AAAA;;AACN,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,eAAKP,MAAL,CAAYQ,GAAZ,QAAoBJ,MAAM,EAA1B,GAAgCR,IAAhC,CAAqC,UAACa,QAAD,EAAc;AACjD,cAAIC,OAAOD,SAASC,IAApB;AACA,cAAIC,MAAMC,OAAN,CAAcH,SAASC,IAAvB,CAAJ,EAAkC;AAChCA,mBAAOA,KAAKG,GAAL,CAAS9B,eAAe+B,YAAxB,CAAP;AACD,WAFD,MAEO;AACLJ,mBAAO3B,eAAe+B,YAAf,CAA4BJ,IAA5B,CAAP;AACD;AACDJ,kBAAQI,IAAR;AACD,SARD,EAQGK,KARH,CAQSR,MART;AASD,OAVM,CAAP;AAWD;;;2BAEMH,E,EAAIF,M,EAAQ;AACjB,aAAO,KAAKF,MAAL,CAAYgB,GAAZ,OAAoBZ,EAApB,EAA0BF,MAA1B,CAAP;AACD;;;2BAEME,E,EAAI;AACT,aAAO,KAAKJ,MAAL,CAAYiB,MAAZ,OAAuBb,EAAvB,CAAP;AACD;;;iCAEmBc,I,EAAM;AACxB,UAAMC,aAAaC,OAAOC,mBAAP,CAA2BH,IAA3B,CAAnB;AACA,UAAMhB,SAAS,EAAf;AACAiB,iBAAWG,OAAX,CAAmB,UAACC,QAAD,EAAc;AAC/B,YAAIC,QAAQN,KAAKK,QAAL,CAAZ;AACA,YAAIC,MAAMC,MAAN,IAAgB,EAApB,EAAwB;AACtBD,kBAAQ,IAAIE,IAAJ,CAASF,KAAT,CAAR;AACD;AACDtB,eAAOqB,QAAP,IAAmBI,MAAMH,KAAN,IAAeN,KAAKK,QAAL,CAAf,GAAgCC,KAAnD;AACD,OAND;AAOA,aAAOtB,MAAP;AACD;;;;;;AAGH0B,OAAOC,OAAP,GAAiB9C,cAAjB","file":"RestFlexClient.js","sourcesContent":["const axios = require('axios');\nconst Auth0 = require('@digituz/auth0-web');\n\nconst timeout = 5000;\n\nclass RestFlexClient {\n  constructor(baseURL, audience, domain, auth0Config) {\n    console.log(auth0Config);\n    Auth0.configure(auth0Config);\n    Auth0.subscribe((authenticated) => {\n      if (authenticated) {\n        const entityToken = Auth0.getExtraToken(baseURL);\n        if (!entityToken) {\n          Auth0.silentAuth(baseURL, audience, `get:${domain} put:${domain} delete:${domain} post:${domain}`)\n            .then(() => {\n              this.updateClient(authenticated, baseURL);\n            });\n        }\n      }\n\n      this.updateClient(authenticated, baseURL);\n    });\n  }\n\n  updateClient(authenticated, baseURL) {\n    const axiosConfig = {\n      baseURL,\n      timeout,\n    };\n\n    if (authenticated) {\n      axiosConfig.headers = {\n        'Authorization': `Bearer ${Auth0.getExtraToken(baseURL)}`\n      };\n    }\n\n    this.client = axios.create(axiosConfig);\n  }\n\n  insert(object) {\n    return this.client.post('/', object);\n  };\n\n  get(id) {\n    return new Promise((resolve, reject) => {\n      this.client.get(`/${id || ''}`).then((response) => {\n        let data = response.data;\n        if (Array.isArray(response.data)) {\n          data = data.map(RestFlexClient.jsonToObject);\n        } else {\n          data = RestFlexClient.jsonToObject(data);\n        }\n        resolve(data);\n      }).catch(reject);\n    });\n  };\n\n  update(id, object) {\n    return this.client.put(`/${id}`, object);\n  };\n\n  remove(id) {\n    return this.client.delete(`/${id}`);\n  };\n\n  static jsonToObject(json) {\n    const properties = Object.getOwnPropertyNames(json);\n    const object = {};\n    properties.forEach((property) => {\n      let value = json[property];\n      if (value.length >= 24) {\n        value = new Date(value);\n      }\n      object[property] = isNaN(value) ? json[property] : value;\n    });\n    return object;\n  };\n}\n\nmodule.exports = RestFlexClient;\n"]}