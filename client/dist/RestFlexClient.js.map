{"version":3,"sources":["../src/RestFlexClient.js"],"names":["axios","require","Auth0","timeout","RestFlexClient","baseURL","audience","domain","auth0Config","configure","updateClient","isAuthenticated","Promise","resolve","reject","entityToken","getExtraToken","silentAuth","then","authenticated","axiosConfig","headers","client","create","object","post","id","connectClient","get","response","data","Array","isArray","map","jsonToObject","catch","put","delete","json","properties","Object","getOwnPropertyNames","forEach","property","value","length","Date","isNaN","module","exports"],"mappings":"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","file":"RestFlexClient.js","sourcesContent":["const axios = require('axios');\nconst Auth0 = require('@digituz/auth0-web');\n\nconst timeout = 5000;\n\nclass RestFlexClient {\n  constructor(baseURL, audience, domain, auth0Config) {\n    Auth0.configure(auth0Config);\n\n    this.audience = audience;\n    this.baseURL = baseURL;\n    this.domain = domain;\n    this.updateClient(Auth0.isAuthenticated(), baseURL);\n  }\n\n  connectClient() {\n    return new Promise((resolve, reject) => {\n      if (Auth0.isAuthenticated()) {\n        const entityToken = Auth0.getExtraToken(this.baseURL);\n        if (!entityToken) {\n          Auth0.silentAuth(this.baseURL, this.audience, `get:${this.domain} put:${this.domain} delete:${this.domain} post:${this.domain}`)\n            .then(() => {\n              this.updateClient(true, this.baseURL);\n              resolve();\n            });\n        } else {\n          resolve();\n        }\n      } else {\n        reject('No session');\n      }\n    });\n  }\n\n  updateClient(authenticated, baseURL) {\n    const axiosConfig = {\n      baseURL,\n      timeout,\n    };\n\n    if (authenticated) {\n      axiosConfig.headers = {\n        'Authorization': `Bearer ${Auth0.getExtraToken(baseURL)}`\n      };\n    }\n\n    this.client = axios.create(axiosConfig);\n  }\n\n  insert(object) {\n    return this.client.post('/', object);\n  };\n\n  get(id) {\n    return new Promise((resolve, reject) => {\n      this.connectClient().then(() => {\n        this.client.get(`/${id || ''}`).then((response) => {\n          let data = response.data;\n          if (Array.isArray(response.data)) {\n            data = data.map(RestFlexClient.jsonToObject);\n          } else {\n            data = RestFlexClient.jsonToObject(data);\n          }\n          resolve(data);\n        }).catch(reject);\n      }).catch(reject);\n    });\n  };\n\n  update(id, object) {\n    return this.client.put(`/${id}`, object);\n  };\n\n  remove(id) {\n    return this.client.delete(`/${id}`);\n  };\n\n  static jsonToObject(json) {\n    const properties = Object.getOwnPropertyNames(json);\n    const object = {};\n    properties.forEach((property) => {\n      let value = json[property];\n      if (value.length >= 24) {\n        value = new Date(value);\n      }\n      object[property] = isNaN(value) ? json[property] : value;\n    });\n    return object;\n  };\n}\n\nmodule.exports = RestFlexClient;\n"]}